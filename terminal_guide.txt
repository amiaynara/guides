This will sound RANDOM, but believe me it is not!

Making an IP static on a LAN
-_---------------------------
    vim /etc/dhcpcd.conf
    
    interface wlan0
    static ip_address=192.168.0.104             # the static ip you want
    static routers=192.168.0.1                  # gateway ip
    static domain_name_servers=8.8.8.8 8.8.4.4  # you could give any
    reboot

Display all devices on network
----------------------------------
    sudo apt install arp 
    ping 192.168.0.255      # replace last section of gateway(.1) with .255
    arp -a


basic commands : believe me you will need them and also believe me you will forget them
--------------------------------------------------------

    pwd
    cd ~home_directory/
    wget url_for_.sh_file
    bash the_above_file.sh
    conda install jupyter
    conda init bash  # when powerline-shell: command not found while activating env
    pipx install powerline-shell # or may be sudo apt does the job as well
    jupyter notebook

vim Plugins
-----------
I am using tpope's "pathogen". 
    mkdir -p ~/.vim/autoload ~/.vim/bundle && \
    curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
    execute pathogen#infect()           # add this particular line to .vimrc , in my case to /.vim/vimrc
That is it ! now start installing plugins... git clone

Using Vundle
-------------
Better. 
requires more setup steps but pays in the long run.
    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
    set nocompatible              " be iMproved, required
    filetype off                  " required

    " set the runtime path to include Vundle and initialize
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    " alternatively, pass a path where Vundle should install plugins
    "call vundle#begin('~/some/path/here')
    Plugin 'VundleVim/Vundle.vim'
    "" other plugins go in here as well <-----------
    call vundle#end() 
in the command line of .vimrc
    :source  %
    :BundleInstall "" changes will be in effect immediately
Don't forget to do BundleInstall after ever Plugin addition.
Warnings: Do not stage the whole .vim => add a .gitignore with 'bundle/' in it. 


Wifi Control
--------------
nmcli is a command line tool controlling NeworkManager. 
        
        nmcli c             : list of saved connections
        nmcli d wifi list   : list of available wifi hotspots
        sudo iwlist <WifiInterface> scanning

        ifconfig -a         : to see the list of interfaces

creating & saving aliases
--------------------------
# temporary aliases
>> alias activate='source ../../bin/activate'

# permanent
alias activate='source ../../bin/activate'  # in ./bashrc
